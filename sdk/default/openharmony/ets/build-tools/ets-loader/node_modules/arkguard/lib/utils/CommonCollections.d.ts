export declare namespace PropCollections {
    let enablePropertyObfuscation: boolean;
    let globalMangledTable: Map<string, string>;
    let historyMangledTable: Map<string, string>;
    let reservedProperties: Set<string>;
    let universalReservedProperties: RegExp[];
    let newlyOccupiedMangledProps: Set<string>;
    let mangledPropsInNameCache: Set<string>;
    function clearPropsCollections(): void;
}
export declare namespace UnobfuscationCollections {
    let printKeptName: boolean;
    let reservedSdkApiForProp: Set<string>;
    let reservedSdkApiForGlobal: Set<string>;
    let reservedSdkApiForLocal: Set<string>;
    let reservedStruct: Set<string>;
    let reservedLangForProperty: Set<string>;
    let reservedLangForTopLevel: Set<string>;
    let reservedExportName: Set<string>;
    let reservedExportNameAndProp: Set<string>;
    let reservedStrProp: Set<string>;
    let reservedEnum: Set<string>;
    let unobfuscatedPropMap: Map<string, Set<string>>;
    let unobfuscatedNamesMap: Map<string, Set<string>>;
    let reservedWildcardMap: Map<RegExp, string>;
    function clear(): void;
}
export declare namespace LocalVariableCollections {
    let reservedStruct: Set<string>;
    let reservedConfig: Set<string>;
    let reservedLangForLocal: Set<string>;
    function clear(): void;
}
