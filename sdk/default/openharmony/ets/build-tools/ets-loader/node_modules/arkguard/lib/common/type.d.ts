export declare const enum Extension {
    TS = ".ts",
    DTS = ".d.ts",
    JS = ".js",
    CJS = ".cjs",
    MJS = ".mjs",
    JSON = ".json",
    ETS = ".ets",
    DETS = ".d.ets"
}
export interface PathAndExtension {
    path: string;
    ext: string | undefined;
}
export interface ProjectInfo {
    packageDir: string;
    projectRootPath: string;
    localPackageSet: Set<string>;
    useNormalized: boolean;
    useTsHar: boolean;
}
/**
 * MangledSymbolInfo:
 * mangledName - the name of the node after obfuscation
 * originalNameWithScope - the original name with scope info of the node
 */
export interface MangledSymbolInfo {
    mangledName: string;
    originalNameWithScope: string;
}
/**
 * FilePathObj:
 * buildFilePath - the absolute path of the source file in the cache directory
 * relativeFilePath - the relative path of the source file in the module directory
 */
export interface FilePathObj {
    buildFilePath: string;
    relativeFilePath: string;
}
export declare const supportedRunningExtension: readonly string[];
export declare const supportedDeclarationExtension: readonly string[];
export declare const fileExtensions: string[];
export declare const supportedParsingExtension: string[];
