export declare namespace ApiExtractor {
    enum ApiType {
        API = 0,
        COMPONENT = 1,
        PROJECT = 2,
        CONSTRUCTOR_PROPERTY = 3,
        KEEP_DTS = 4
    }
    let mPropertySet: Set<string>;
    let mExportNames: Set<string>;
    let mConstructorPropertySet: Set<string>;
    let mEnumMemberSet: Set<string>;
    let mSystemExportSet: Set<string>;
    /**
     * traverse files of  api directory
     * @param apiPath api directory path
     * @param apiType
     * @private
     */
    const traverseApiFiles: (apiPath: string, apiType: ApiType) => void;
    /**
     * desc: parse openHarmony sdk to get api list
     * @param version version of api, e.g. version 5.0.1.0 for api 9
     * @param sdkPath sdk real path of openHarmony
     * @param isEts true for ets, false for js
     * @param outputDir: sdk api output directory
     */
    function parseOhSdk(sdkPath: string, version: string, isEts: boolean, outputDir: string): void;
    function extractStringsFromFile(filePath: string): void;
    /**
     * save api json object to file
     * @private
     */
    function writeToFile(reservedProperties: string[], outputPath: string): void;
    function isRemoteHar(filePath: string): boolean;
    function isInOhModuleFile(filePath: string): boolean;
    function isParsableFile(path: string): boolean;
    /**
    * parse common project or file to extract exported api list
    * @return reserved api names
    */
    function parseFileByPaths(projectPaths: Set<string>, scanningApiType: ApiType): {
        reservedExportPropertyAndName: Set<string> | undefined;
        reservedExportNames: Set<string> | undefined;
    };
}
