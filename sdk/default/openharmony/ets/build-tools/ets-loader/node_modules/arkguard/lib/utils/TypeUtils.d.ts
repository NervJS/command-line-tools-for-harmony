import type { SourceFile, Symbol, TypeChecker } from 'typescript';
export declare class TypeUtils {
    /**
     * Create .d.ets, .d.ts, .ts ast from .d.ets, .d.ts, .ts content.
     * Create .ts ast from .ets, .js content
     * @param {string} sourceFilePath
     * @param {string} content - The content in sourceFilePath
     */
    static createObfSourceFile(sourceFilePath: string, content: string): SourceFile;
    static tsToJs(ast: SourceFile): void;
    static createChecker(ast: SourceFile): TypeChecker;
    /**
     * Retrieves the symbol associated with the declaration site of the given symbol.
     *
     * This method resolves the symbol to its declaration site to ensure consistency
     * in obfuscated naming. Obfuscation names are bound to the symbol at the declaration
     * site. If the symbol at the declaration site differs from the symbol at the usage
     * site, discrepancies in obfuscated names may occur. By using this method, the
     * obfuscation name can be consistently retrieved from the declaration site symbol,
     * ensuring uniformity between the declaration and usage sites.
     */
    static getOriginalSymbol(symbol: Symbol, checker: TypeChecker): Symbol;
}
