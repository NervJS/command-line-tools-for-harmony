"use strict";
/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnitTestUtil = void 0;
const FileUtils_1 = require("./FileUtils");
class UnitTestUtil {
    // The paths in mKeepFileSourceCode are relative paths. Join them with the directory where the obfuscation configuration file is located 
    // to get the absolute path.
    static initKeepPathConfig(customProfiles, configPath) {
        if (customProfiles.mKeepFileSourceCode) {
            const keepFileSourceCode = customProfiles.mKeepFileSourceCode;
            const tempKeepSourceOfPaths = new Set();
            const tempkeepFilesAndDependencies = new Set();
            const processPaths = (paths, targetPaths) => {
                paths.forEach(tempPath => {
                    const absPath = FileUtils_1.FileUtils.getAbsPathBaseConfigPath(configPath, tempPath);
                    targetPaths.add(absPath);
                });
            };
            processPaths(keepFileSourceCode.mKeepSourceOfPaths, tempKeepSourceOfPaths);
            processPaths(keepFileSourceCode.mkeepFilesAndDependencies, tempkeepFilesAndDependencies);
            keepFileSourceCode.mKeepSourceOfPaths = tempKeepSourceOfPaths;
            keepFileSourceCode.mkeepFilesAndDependencies = tempkeepFilesAndDependencies;
        }
    }
}
exports.UnitTestUtil = UnitTestUtil;
//# sourceMappingURL=UnitTestUtil.js.map