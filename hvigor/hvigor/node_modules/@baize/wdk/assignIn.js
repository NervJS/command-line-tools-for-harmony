"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 分配来源对象（sources）的可枚举属性及其继承的属性到目标（target）。
 * 来源对象的应用规则是从左到右，随后的下一个对象的属性会覆盖上一个对象的属性
 * @param target
 * @param sources
 */
function assignIn(target) {
    var _a;
    var sources = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        sources[_i - 1] = arguments[_i];
    }
    // 将sources的对象属性分配给newTarget
    var newTarget = Object.assign({}, target);
    var _loop_1 = function (i, len) {
        var eachSource = sources[i];
        if (Array.isArray(eachSource)) {
            for (var j = 0, subLen = eachSource.length; j < subLen; j++) {
                newTarget[j] = eachSource[j];
            }
        }
        else {
            Object.keys(eachSource).forEach(function (key) {
                newTarget[key] = eachSource[key];
            });
        }
    };
    for (var i = 0, len = sources.length; i < len; i++) {
        _loop_1(i, len);
    }
    var _loop_2 = function (i, len) {
        var protoKeys = ((_a = sources[i]) === null || _a === void 0 ? void 0 : _a.constructor) ? Object.keys(sources[i].constructor.prototype) : [];
        protoKeys.forEach(function (key) {
            newTarget[key] = sources[i].constructor.prototype[key];
        });
    };
    // 将sources的原型对象上的属性分配给newTarget
    for (var i = 0, len = sources.length; i < len; i++) {
        _loop_2(i, len);
    }
    return newTarget;
}
exports.default = assignIn;
