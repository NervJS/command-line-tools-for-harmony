"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var validCheck_1 = require("./common/validCheck");
var isArrayLike_1 = __importDefault(require("./isArrayLike"));
var isString_1 = __importDefault(require("./isString"));
function switchNestedArray(input, result) {
    for (var i = 0, len = input.length; i < len; i++) {
        var item = input[i];
        if ((0, isArrayLike_1.default)(item) && !(0, isString_1.default)(item)) {
            switchNestedArray(item, result);
        }
        else {
            result.push(item);
        }
    }
}
/**
 * 将array递归为一维数组
 *
 * @param input(any) 需要处理的数组
 * @returns array 返回一个的新一维数组
 *
 * @example
 * _.flattenDeep([1, [2, [3, [4]], 5]]);
 * // => [1, 2, 3, 4, 5]
 */
function flattenDeep(input) {
    if (!(0, isArrayLike_1.default)(input)) {
        return [];
    }
    var result = [];
    for (var i = 0, len = input.length; i < len; i++) {
        if ((0, validCheck_1.isFlattenable)(input[i])) {
            switchNestedArray(input[i], result);
        }
        else {
            result.push(input[i]);
        }
    }
    return result;
}
exports.default = flattenDeep;
