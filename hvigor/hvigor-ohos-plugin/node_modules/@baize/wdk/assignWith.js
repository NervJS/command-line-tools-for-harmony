"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var assign_1 = require("./assign");
var copyObject_1 = require("./common/copyObject");
var keys_1 = __importDefault(require("./keys"));
/**
 * 方法和 assign 类似, 但是额外提供一个 customizer 方法，
 * 该方法会决定如何对源对象和目标对象的值进行 assign
 *
 * @note 该方法会修改目标对象
 * @category Object
 * @example
 * @param {Object} object 目标对象.
 * @param {...Object} sources 源对象.
 * @param {Function} [customizer] customizer 方法，
 * @returns {Object} assignWith 后的对象
 *
 * function customizer(objValue, srcValue) {
 *   return _.isUndefined(objValue) ? srcValue : objValue;
 * }
 *
 * var defaults = _.partialRight(_.assignWith, customizer);
 *
 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
 * // => { 'a': 1, 'b': 2 }
 */
var assignWith = (0, assign_1.createAssignFunction)(function (object, source, _srcIndex, customizer) {
    (0, copyObject_1.copyObject)(source, (0, keys_1.default)(source), object, customizer);
});
exports.default = assignWith;
