"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var isNil_1 = __importDefault(require("./isNil"));
var isNaN_1 = __importDefault(require("./isNaN"));
/**
 * 计算指定数组中的最大值，并返回。
 * 如果数组为空或者为虚值，则返回 undefined.
 * @Catalog core
 * @param array {Array<any>} 待计算的数组
 * @returns any | undefined
 */
function max(array) {
    if (array && typeof array !== 'number' && array.length > 0) {
        var maxValue_1 = array[0];
        array.forEach(function (c) {
            if (c > maxValue_1 || (0, isNil_1.default)(maxValue_1) || (0, isNaN_1.default)(maxValue_1)) {
                maxValue_1 = c;
            }
        });
        return maxValue_1;
    }
    return undefined;
}
exports.default = max;
