"use strict";
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2023. All rights reserved.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var validCheck_1 = require("./common/validCheck");
var eq_1 = __importDefault(require("./eq"));
var isArrayLike_1 = __importDefault(require("./isArrayLike"));
var isObject_1 = __importDefault(require("./isObject"));
var MAX_ARRAY_LEN = 4294967295;
/**
 * 将 str 使用 separator 进行拆分，最后返回拆分后的数组。
 * 如果有传入 limit，那么返回的长度不超过 limit。
 * @param str 待拆分的字符串
 * @param separator 字符串拆分的数组
 * @param limit 限定字符串数组的长度
 * @returns string[] 按照 separator 拆分的字符串数组
 * @example
 *
 * ```ts
 * wdk.split('a-b-c', '-', 2);
 * // => ['a', 'b']
 * ```
 */
function split(str, separator, limit) {
    var sep = separator;
    var limitLen = limit;
    if (limit && typeof limit !== 'number' && isIterateeCall(str, separator, limit)) {
        sep = undefined;
        limitLen = undefined;
    }
    limitLen = limitLen === undefined ? MAX_ARRAY_LEN : limitLen >>> 0;
    if (!limitLen) {
        return [];
    }
    var originStr = str;
    if (str == null) {
        originStr = '';
    }
    return originStr.split(sep, limitLen);
}
exports.default = split;
function isIterateeCall(value, index, object) {
    if (!(0, isObject_1.default)(object)) {
        return false;
    }
    var type = typeof index;
    if (type === 'number'
        ? ((0, isArrayLike_1.default)(object) && (0, validCheck_1.isIndex)(index, object.length))
        : (type === 'string' && index in object)) {
        return (0, eq_1.default)(object[index], value);
    }
    return false;
}
