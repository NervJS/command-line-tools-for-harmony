"use strict";var __importDefault=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.importCheckPlugin=void 0;const hvigor_arkts_base_1=require("@ohos/hvigor-arkts-base"),hvigor_common_1=require("@ohos/hvigor-common"),path_1=__importDefault(require("path")),constants_js_1=require("../util/constants.js"),LOGGER=hvigor_arkts_base_1.ArktsBaseLogger.getPluginLogger("ArkTS import check");function importCheckPlugin(){return{name:"importCheckPlugin",resolveId:resolveId,load:load,moduleParsed:moduleParsed}}function resolveId(t,o,e,s){const r=this.getModuleInfo(e);if(!r?.meta)return;if(t.includes("oh_modules")){const o=`ERROR File: ${e}\n         Cannot import files outside of the current module using relative paths.\n         Import statement: '${t}'`;return void logMsg(this.share?.projectConfig?.strictMode?.noExternalImportByPath,o)}if(path_1.default.isAbsolute(t)){const o=r.meta.absoluteImports??[];return o.push(t),void(r.meta.absoluteImports=o)}const i=r?.meta?.belongModulePath;if(i&&(t.startsWith("./")||t.startsWith("../"))&&!(0,hvigor_common_1.isSubPath)(o,i)){const o=r.meta.outsideModuleImports??[];o.push(t),r.meta.outsideModuleImports=o}}function load(t){if(t.includes(constants_js_1.OH_NODE_MODULES)||t.includes(constants_js_1.NODE_MODULES))return;const o=this.getModuleInfo(t);o?.meta&&(o.meta.belongModulePath=getBelongModulePath(t,this.share?.projectConfig?.allModulePaths)??o.meta.pkgPath)}function moduleParsed(t){if(t?.meta?.absoluteImports&&Array.isArray(t.meta.absoluteImports))for(const o of t.meta.absoluteImports){const e=`ERROR File: ${t.id}\n      Avoid absolute paths in imports. Import statement: '${o}'`;logMsg(this.share?.projectConfig?.strictMode?.noExternalImportByPath,e)}if(t?.meta?.outsideModuleImports&&Array.isArray(t.meta.outsideModuleImports))for(const o of t.meta.outsideModuleImports){const e=`ERROR File: ${t.id}\n      Cannot import files outside of the current module using relative paths. Import statement: '${o}'`;logMsg(this.share?.projectConfig?.strictMode?.noExternalImportByPath,e)}}function getBelongModulePath(t,o){if(o)for(const e of o)if((0,hvigor_common_1.isSubPath)(t,e))return e}function logMsg(t,o){t?LOGGER.error(o):LOGGER.warn(o)}exports.importCheckPlugin=importCheckPlugin,exports.default={resolveId:resolveId,load:load,moduleParsed:moduleParsed};