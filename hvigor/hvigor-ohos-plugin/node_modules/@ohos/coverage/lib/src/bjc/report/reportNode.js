"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportNode = void 0;
const html_1 = require("./html");
const coverage_1 = require("../coverage");
class ReportNode {
    constructor(name, summary, absolutePath, date) {
        this._date = date;
        this._name = name;
        this._absolutePath = absolutePath;
        this._relativePath = name;
        this._children = new Map();
        let coverageReport = new coverage_1.CoverageReport();
        coverageReport.summary.add(summary);
        this._HtmlReport = new html_1.HtmlReport(coverageReport, name);
    }
    get date() {
        return this._date;
    }
    set date(value) {
        this._date = value;
    }
    get HtmlReport() {
        return this._HtmlReport;
    }
    set HtmlReport(value) {
        this._HtmlReport = value;
    }
    get htmlReport() {
        return this._HtmlReport;
    }
    set htmlReport(value) {
        this._HtmlReport = value;
    }
    get name() {
        return this._name;
    }
    set name(value) {
        this._name = value;
    }
    get children() {
        return this._children;
    }
    set children(value) {
        this._children = value;
    }
    get father() {
        return this._father;
    }
    set father(value) {
        this._father = value;
    }
    get absolutePath() {
        return this._absolutePath;
    }
    set absolutePath(value) {
        this._absolutePath = value;
    }
    get relativePath() {
        return this._relativePath;
    }
    set relativePath(value) {
        this._relativePath = value;
    }
    addFather(father) {
        this._father = father;
        father.addChild(this);
    }
    addChild(child) {
        if (this._children == null) {
            this._children = new Map();
        }
        this._children.set(child._name, child);
    }
    removeChild(child) {
        this._children.delete(child._name);
    }
}
exports.ReportNode = ReportNode;
