/// <reference types="node" />
import { MessagePort } from 'worker_threads';
import { RollupWatcher, SerializedTimings } from 'rollup';
import { LogEvent } from './log/arkts-base-log.js';
import { HvigorOptions } from './options/hvigor-options.js';
import { CacheStoreManager } from './util/cache-store-type.js';
export declare function writeWatchCache(pkgName2SourceRoots?: Record<string, string[]>): Promise<void>;
export interface BuildResult {
    timing?: SerializedTimings;
    callback?: (isBuildSuccess: boolean) => Promise<void> | void;
}
export declare function build(options: HvigorOptions, handleLogs?: (logs: LogEvent[], lastReUsedFiles?: Set<string>) => void, parentPort?: MessagePort, initServerOnce?: () => void, setWatcher?: (w: RollupWatcher) => void, printError?: (error: unknown) => void, cacheStoreManager?: CacheStoreManager): Promise<BuildResult>;
/**
 * 删除所有内存中文件的缓存
 */
export declare function deleteModuleCache(moduleId: string, cachePath?: string, cacheStoreManager?: CacheStoreManager, compileEnv?: string): void;
