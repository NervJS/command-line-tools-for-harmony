{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "JSON schema for module-level oh-package.json5 files",
  "definitions": {
    "person": {
      "description": "A person who has been involved in creating or maintaining this package.",
      "type": [
        "object",
        "string"
      ],
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0,
          "pattern": "^.*$"
        },
        "email": {
          "type": "string",
          "maxLength": 64,
          "minLength": 0,
          "format": "email"
        }
      }
    },
    "dependency": {
      "description": "Dependencies are specified with a simple hash of package name to version range. The version range is a string which has one or more space-separated descriptors. Dependencies can also be identified with a tarball or a module directory in the same project.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    }
  },
  "properties": {
    "name": {
      "description": "Specifies the name of a third-party database. The value is in the format of @group/packagename and is globally unique. In addition to @ and /, group and packagename can contain only lowercase letters, digits, underscores (_), and hyphens (-). The total length is less than or equal to 128 characters. In addition, group and packagename must start with a letter and cannot be reserved keywords of ArkTS.",
      "type": "string",
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^(@(?![0-9\\-_])[a-z0-9\\-_]+(?<![\\-_])/)?(?![0-9\\-_.])[a-z0-9\\-_.]+(?<![\\-_.])$"
    },
    "version": {
      "description": "Third-party library version.Comply with the semver semantic specification (https://semver.org/).",
      "type": "string",
      "maxLength": 64,
      "minLength": 1
    },
    "compatibleSdkVersion": {
      "description": "Compatible SDK version.",
      "type": [
        "string",
        "integer"
      ],
      "maxLength": 64,
      "minLength": 1
    },
    "compatibleSdkType": {
      "description": "Compatible SDK type.",
      "type": "string",
      "maxLength": 64,
      "minLength": 1
    },
    "obfuscated": {
      "description": "Obfuscation enabling flag.",
      "type": "boolean"
    },
    "nativeComponents": {
      "description": "SDK compatibility configuration of the native components.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Specifies the name of a native component.",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^(@(?![0-9\\-_])[a-z0-9\\-_]+(?<![\\-_])/)?(?![0-9\\-_.])[a-z0-9\\-_.]+(?<![\\-_.])$"
          },
          "version": {
            "description": "Native component version.Comply with the semver semantic specification (https://semver.org/).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1
          },
          "compatibleSdkVersion": {
            "description": "Compatible SDK version.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1
          },
          "compatibleSdkType": {
            "description": "Compatible SDK type.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1
          }
        }
      }
    },
    "description": {
      "description": "Describes the third-party database information, which is helpful for search and discovery. ",
      "type": "string",
      "maxLength": 512,
      "minLength": 0
    },
    "keywords": {
      "description": "Keyword information array, which facilitates search. The number of keywords cannot exceed 10, and a single keyword cannot exceed 20 characters.",
      "type": "array",
      "maxItems": 10,
      "items": {
        "type": "string",
        "maxLength": 20
      }
    },
    "author": {
      "$ref": "#/definitions/person",
      "default": ""
    },
    "homepage": {
      "description": "The url to the home page of the third-party library, usually the github/gitee link of the project. The value can contain a maximum of 1024 characters.",
      "type": "string",
      "maxLength": 1024
    },
    "repository": {
      "description": "Open-source code repository address of the third-party library. The value can contain a maximum of 1024 characters.",
      "type": "string",
      "maxLength": 1024
    },
    "license": {
      "description": "The open source license for the current project. For example, BSD, MIT, ISC, and Apache-2.0. For the GPL, the repository cannot be empty (optional).",
      "type": "string"
    },
    "dependencies": {
      "$ref": "#/definitions/dependency"
    },
    "devDependencies": {
      "$ref": "#/definitions/dependency"
    },
    "dynamicDependencies": {
      "$ref": "#/definitions/dependency"
    },
    "packageType": {
      "description": "Indicates the package type. For an shared library, the value is 'InterfaceHar'.",
      "type": "string"
    },
    "category": {
      "description": "Identifies the category of the package.",
      "type": "string"
    },
    "main": {
      "description": "The main field is a module ID that is the primary entry point to your program.",
      "type": "string"
    },
    "types": {
      "description": "Specifies the file name of the type definition. When a typescript is used to define a new type and needs to be provided for other developers, you need to specify the declaration file. Generally, the declaration file is .d.ts or .d.ets.",
      "type": "string"
    },
    "artifactType": {
      "description": "Harmony package artifact type. The options are original and obfuscation. original: source code, that is, released source code (.ts/.ets). obfuscation: obfuscation code, that is, the source code is released and uploaded after obfuscation. bytecode: bytecode. The source code is obfuscated, the obfuscated code is compiled into abc ark bytecode, and then uploaded (.abc). The default value is original.",
      "type": "string",
      "enum": [
        "original",
        "obfuscation",
        "bytecode"
      ],
      "default": "original"
    },
    "hooks": {
      "description": "The 'hooks' member is an object hash of script commands that are run at various times in the lifecycle of your package. The key is the lifecycle event, and the value is the command to run at that point.",
      "type": "object",
      "properties": {
        "preInstall": {
          "type": "string"
        },
        "postInstall": {
          "type": "string"
        },
        "preUninstall": {
          "type": "string"
        },
        "postUninstall": {
          "type": "string"
        },
        "prePublish": {
          "type": "string"
        },
        "postPublish": {
          "type": "string"
        },
        "preVersion": {
          "type": "string"
        },
        "postVersion": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "scripts": {
      "description": "The 'scripts' member is an json5 object of script commands, it`s command format is 'key': 'value'. The key is the alias of script, and this value is the command to run.",
      "type": "object"
    }
  },
  "required": [
    "name",
    "version"
  ]
}
