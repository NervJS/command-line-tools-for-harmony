"use strict";var e=this&&this.__awaiter||function(e,t,o,r){return new(o||(o=Promise))((function(n,i){function a(e){try{u(r.next(e))}catch(e){i(e)}}function s(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?n(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(a,s)}u((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.RetryUploaderProxy=void 0;const o=t(require("../../../../../log")),r=require("../../../../../common/message"),n=require("../../../../../util/deepClone");class i{constructor(e){this.uploader=e}uploadPackage(t,a,s){return e(this,void 0,void 0,(function*(){let e=0;for(;e<i.MAX_RETRY_TIMES;)try{const e=(0,n.deepClone)(a);return yield this.uploader.uploadPackage(t,e,s)}catch(t){if(t.code!==i.RETRY_CODE)throw t;o.default.warn("",`Package "${a.name}" is locked, wait ${i.RETRY_INTERVAL/1e3} seconds to retry publish`),yield new Promise((e=>setTimeout(e,i.RETRY_INTERVAL))),e++,o.default.info("",`Retry publish Package "${a.name}" the ${e} time`)}throw new Error((0,r.format)(r.Messages.Publish.PkgIsLocked,{pkg:a.name,maxRetryTimes:i.MAX_RETRY_TIMES.toString()}))}))}}exports.RetryUploaderProxy=i,i.RETRY_CODE=598,i.MAX_RETRY_TIMES=3,i.RETRY_INTERVAL=3e4;