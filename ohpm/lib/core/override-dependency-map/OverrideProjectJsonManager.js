"use strict";var e=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))((function(n,o){function s(e){try{c(i.next(e))}catch(e){o(e)}}function a(e){try{c(i.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(s,a)}c((i=i.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.OverrideProjectJsonManager=void 0;const r=require("./OverrideProjectJsonFile"),i=t(require("../../log")),n=require("./types"),o=require("../../config"),s=t(require("path"));class a{static getInstance(){return this.instance||(this.instance=new a),this.instance}constructor(){this.overrideDepMap=new Map}getMapSize(){return this.overrideDepMap.size}isProjectPackageJsonConfig(e){return!(!e||!e.trim().startsWith(n.PREFIX_OVERRIDE_PROJECT_JSON))}add(e,t){this.overrideDepMap.has(e)||this.overrideDepMap.set(e,new r.OverrideProjectJsonFile(e,t))}hasOverrideConfig(){return this.overrideDepMap.has(this.getKey())}overrideConfig(t){return e(this,void 0,void 0,(function*(){const e=this.overrideDepMap.get(this.getKey());return e?e.overrideConfig(t):(i.default.debug("",`overrideConfig failed with key: ${this.getKey()}.`),t)}))}getKey(){return`${n.PREFIX_OVERRIDE_PROJECT_JSON}${s.default.resolve(o.config.getProjectRoot())}`}}exports.OverrideProjectJsonManager=a;