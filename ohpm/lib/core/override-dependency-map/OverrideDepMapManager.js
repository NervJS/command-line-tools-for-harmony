"use strict";var e=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))((function(n,a){function s(e){try{p(r.next(e))}catch(e){a(e)}}function o(e){try{p(r.throw(e))}catch(e){a(e)}}function p(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(s,o)}p((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.OverrideDepMapManager=void 0;const i=require("./OverrideDepMapFile"),r=require("../../config"),n=t(require("path")),a=require("../../common/Constants"),s=require("../../util/FsUtil"),o=require("./types"),p=require("../../common/message"),c=t(require("../../log")),d=require("./readProjectOhPackageJson5"),l=require("../dependency/util"),g=require("../install-targets/TargetManager"),u=require("../../util"),h=require("../../tools/ohpa/Ohpa"),v=require("../install-targets/ProjectBuildProfile");class f{constructor(){this.initPromise=void 0,this._overrideDepMap=new Map,this._projectLevelDepMap=new Map,this._targetPathDepMap=new Map}static getInstance(){return this.instance||(this.instance=new f),this.instance}get overrideDepMap(){return this._overrideDepMap}static destroy(){f.instance&&(f.instance._overrideDepMap.clear(),f.instance._projectLevelDepMap.clear(),f.instance._targetPathDepMap.clear(),f.instance.initPromise=void 0,f.instance=void 0)}hasConfig(){return g.TargetManager.getInstance().isTargetMod()?this._targetPathDepMap.size>0||this._projectLevelDepMap.size>0:this._overrideDepMap.size>0}needOverride(e,t,i){return!!this.getOverrideDepFile(e,t,i)}getConfig(t,i,r,s){return e(this,void 0,void 0,(function*(){this.initPromise||(this.initPromise=this.init()),yield this.initPromise;let e=i;((0,l.isStandardTagDependency)(r)||r===a.Constants.LATEST)&&(e=r),(0,l.isLocalDependency)(e)&&(e=n.default.resolve(e));const o=this.getOverrideDepFile(t,e,s);if(o)return o.getOverrideConfig()}))}init(){return e(this,void 0,void 0,(function*(){const e=n.default.resolve(r.config.getProjectRoot(),a.Constants.MyPackageJson);if(!(yield s.FsUtil.exists(e)))throw new Error((0,p.format)(p.Messages.Common.FileNotFound,{filename:a.Constants.MyPackageJson,filedir:r.config.getProjectRoot()}));const t=yield(0,d.readProjectOhPackageJson5)();if(!t)throw new Error((0,p.format)(p.Messages.Common.FileEmpty,{filePath:e}));let i=t.overrideDependencyMap;if(i){if("object"!=typeof i)throw new Error(p.Messages.OverrideDepMap.OverrideDepMapValueTypeError);yield this.checkProjectLevelOverrideDependencyMapSpec(i),this.initOverrideDepMap(this._projectLevelDepMap,i)}if(g.TargetManager.getInstance().isTargetMod()){i=yield g.TargetManager.getInstance().mergeWithDependencyMapJson(i),this.initOverrideDepMap(this._overrideDepMap,i);const e=yield g.TargetManager.getInstance().getDependencyMap();this.initOverrideDepMap(this._targetPathDepMap,e)}else this._overrideDepMap=this._projectLevelDepMap||{};c.default.debug("",`${o.NAME_OVERRIDE_DEPENDENCY_MAP} config init result: ${this._overrideDepMap.size>0}.`)}))}initOverrideDepMap(e,t){if(t&&Object.keys(t).length>0){Object.keys(t).forEach((n=>{const a=t[n],s=new i.OverrideDepMapFile(n,a,r.config.getProjectRoot());e.set(s.getKey(),s)}))}}getOverrideDepFile(e,t,i){if(g.TargetManager.getInstance().isTargetMod())return this.getTargetPathDepFile(e,t,i);if(!t)return c.default.debug("",`getOverrideDepFile with key: ${e}.`),this._overrideDepMap.get(e);let r=this._overrideDepMap.get(`${e}@${t}`);return r?(c.default.debug("",`getOverrideDepFile succeed with key: ${e}@${t}.`),r):(r=this._overrideDepMap.get(e),r?(c.default.debug("",`getOverrideDepFile succeed with key: ${e}.`),r):void 0)}getTargetPathDepFile(e,t,i){if(v.projectBuildProfile.isModuleRoot(i)){const t=this._targetPathDepMap.get(e);if(t)return t}if(!t)return this._projectLevelDepMap.get(e);let r=this._projectLevelDepMap.get(`${e}@${t}`);return r?(c.default.debug("",`getOverrideDepFile succeed with key: ${e}@${t}.`),r):(r=this._projectLevelDepMap.get(e),r?(c.default.debug("",`getOverrideDepFile succeed with key: ${e}.`),r):void 0)}checkProjectLevelOverrideDependencyMapSpec(t){return e(this,void 0,void 0,(function*(){const e=new Set;for(const i in t)e.add(t[i]);for(const t of e){const e=n.default.resolve(r.config.getProjectRoot(),t);(yield s.FsUtil.exists(e))&&(yield this.validateDependencies(e))}}))}validateDependencies(t){return e(this,void 0,void 0,(function*(){const e=u.FsBlockingUtil.readJSON5Sync(t),i=["dependencies","devDependencies","dynamicDependencies"];for(const r of i)e[r]&&this.checkValues(e[r],t);c.default.debug("","All dependencies are valid.")}))}checkValues(e,t){for(const[i,n]of Object.entries(e))if("string"==typeof n){if(!h.ohpa.validSpec(n,r.config.getProjectRoot()))throw c.default.error("EOVERRIDE",(0,p.format)(p.Messages.Overrides.InvalidSpec,{replaceSpec:n,depName:i,packageJsonPath:t})),new Error(p.Messages.Overrides.ValidDependencyMapSpecFailed)}}}exports.OverrideDepMapManager=f;