"use strict";var t=this&&this.__awaiter||function(t,e,a,n){return new(a||(a=Promise))((function(r,i){function o(t){try{l(n.next(t))}catch(t){i(t)}}function s(t){try{l(n.throw(t))}catch(t){i(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof a?e:new a((function(t){t(e)}))).then(o,s)}l((n=n.apply(t,e||[])).next())}))},e=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PackageValidatorImpl=void 0;const a=e(require("./OhPkgValidationConfig.json")),n=require("./factory"),r=require("./rule/ValidationConfigChecker");class i{constructor(t){this.errorCallback=t||((t,e)=>{throw new Error(e.errorMsg)}),this.defaultHandlersMap=new Map}static getInstance(){return this.Instance||(this.Instance=new i,this.Instance.loadDefaultConfig()),this.Instance}getHandlers(){return t(this,void 0,void 0,(function*(){return this.defaultHandlersMap}))}loadCustomConfig(t){t.forEach((t=>r.ValidationConfigChecker.checkConfig(t))),t.forEach((t=>{const e=n.ValidationRuleHandlerFactory.createHandler(t,this.errorCallback);this.defaultHandlersMap.set(t.attrName,e)}))}loadDefaultConfig(){a.default.forEach((t=>r.ValidationConfigChecker.checkConfig(t))),a.default.forEach((t=>{const e=n.ValidationRuleHandlerFactory.createHandler(t,this.errorCallback);this.defaultHandlersMap.set(t.attrName,e)}))}validate(e,a){return t(this,void 0,void 0,(function*(){const t=yield this.getHandlers();for(const[n,r]of t.entries())a&&!a.includes(n)||r.validate(e,n)}))}}exports.PackageValidatorImpl=i;