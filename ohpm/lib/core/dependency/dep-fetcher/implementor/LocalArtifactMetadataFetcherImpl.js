"use strict";var e=this&&this.__awaiter||function(e,t,a,r){return new(a||(a=Promise))((function(i,c){function n(e){try{o(r.next(e))}catch(e){c(e)}}function s(e){try{o(r.throw(e))}catch(e){c(e)}}function o(e){var t;e.done?i(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(n,s)}o((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalArtifactMetadataFetcherImpl=void 0;const a=require("../../util"),r=t(require("fs-extra")),i=t(require("path")),c=require("../../../../util"),n=require("../../../../common/Constants"),s=require("../../../../common/message"),o=require("../../../locker"),l=require("../../../registry/registry"),p=require("../../../../util/FsUtil");exports.LocalArtifactMetadataFetcherImpl=class{fetch(t){return e(this,void 0,void 0,(function*(){const e=i.default.resolve(t.where,t.fetchSpec);if(!(yield p.FsUtil.exists(e)))throw new Error((0,s.format)(s.Messages.Fetcher.LocalArtifact.FetchLocalPackageFailed,{tarballPath:e}));const r=this.readModifyTime(t.fetchSpec),u=yield(0,a.hspDetect)(e),d=yield(0,a.readPkgJsonFromTarball)(e,u);if(!d)throw new Error((0,s.format)(s.Messages.Fetcher.LocalArtifact.FetchMetadataFailed,{depName:t.name,tarballPath:e}));let h;c.PackageUtil.requireNotEmpty(d.name,`The name field in the oh-package.json5 file of ${e}`),d.packageType===n.Constants.HSPPackageType&&(null==u?void 0:u.hsp)?h=n.HspType.BUNDLE_APP:d.packageType===n.Constants.HSPPackageType&&(h=n.HspType.CROSS_APP);const f={name:d.name,version:d.version,resolved:t.fetchSpec,dependencies:d.dependencies,dynamicDependencies:d.dynamicDependencies,registryType:l.RegistryType.local,packageType:d.packageType,hspType:h};return o.PackageLockerManager.getInstance().updateLocalArtifactMtime(t.fetchSpec,r),this.buildMetaDataFetchResult(t,f,!1)}))}buildMetaDataFetchResult(e,t,a){return{name:t.name,packageType:t.packageType,versions:{[e.fetchSpec]:t},isFromLockFile:a,registryType:t.registryType}}readModifyTime(e){const t=r.default.statSync(e);return t?t.mtimeMs.toString():""}};