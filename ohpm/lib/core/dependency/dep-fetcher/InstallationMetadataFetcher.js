"use strict";var e=this&&this.__awaiter||function(e,t,r,a){return new(r||(r=Promise))((function(o,n){function i(e){try{s(a.next(e))}catch(e){n(e)}}function c(e){try{s(a.throw(e))}catch(e){n(e)}}function s(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(i,c)}s((a=a.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.InstallationMetadataFetcher=void 0;const r=require("../../locker"),a=require("../util"),o=require("../../../tools/ohpa/OhpaType"),n=require("../../../common/message"),i=require("../../registry/registry"),c=require("./MetaDataFetcherFactory"),s=require("../../../util"),p=t(require("../../../log"));exports.InstallationMetadataFetcher=class{fetch(t){return e(this,void 0,void 0,(function*(){const e=r.PackageLockerManager.getInstance(),o=e.getLockSpec(t.rootDir,t.name,t.fetchSpec);let n,i=(0,a.parseDependency)(`${t.name}@${t.fetchSpec}`);return o&&(p.default.debug("InstallationMetadataFetcher",`get lock key ${o} from lockfile succeed.`),i=(0,a.parseDependency)(o),n=this.tryFetchFromLockFile(e,t,i)),n||(t=this.changeRequestByOhpaResult(t,i),n=yield this.fetchWithImplementor(t,i)),n}))}tryFetchFromLockFile(e,t,r){const a=e.getLockSpec(t.rootDir,t.name,t.fetchSpec),i=e.getLockPkg(t.rootDir,t.name,t.fetchSpec);let c;switch(p.default.debug("InstallationMetadataFetcher",`try fetch ${a} result from lockPkg: ${JSON.stringify(i,null,2)}`),r.type){case o.OhpaType.Range:case o.OhpaType.Version:case o.OhpaType.Tag:c=this.tryFetchRegistryResultFromLockPkg(a,i,t,e);break;case o.OhpaType.File:c=this.tryFetchFileResultFromLockPkg(a,i,t,e);break;case o.OhpaType.SourceCode:break;case o.OhpaType.Unknown:default:throw new Error((0,n.format)(n.Messages.Fetcher.UnknownOhpaType,{ohpaType:r.type||"",pkg:a}))}return p.default.debug("InstallationMetadataFetcher",`fetch ${a} result from lockPkg succeed, result: ${JSON.stringify(c,null,2)}`),c}fetchWithImplementor(t,r){return e(this,void 0,void 0,(function*(){return c.MetaDataFetcherFactory.getInstance().getInstallationFetcherImpl(r.type).fetch(t)}))}changeRequestByOhpaResult(e,t){return{parentSaveRoot:e.parentSaveRoot,rootDir:e.rootDir,name:e.name,fetchSpec:t.getFetchSpec(),where:e.where}}tryFetchRegistryResultFromLockPkg(e,t,r,a){if(t&&(t.integrity||t.shasum)){const o=a.parseSpecKey(e);if(!o.version)throw new Error((0,n.format)(n.Messages.Locker.InvalidSpecifier,{specValue:e}));const i={},c=t.packageType;return t.name||(t.name=r.name,a.updateLockPkg(r.rootDir,r.name,o.version,t)),t.version||(t.version=o.version,a.updateLockPkg(r.rootDir,r.name,o.version,t)),i[o.version||""]=t,{name:r.name,versions:i,packageType:c,registryType:t.registryType,isFromLockFile:!0}}}tryFetchFileResultFromLockPkg(e,t,r,a){const o=a.parseSpecKey(e);if(!o.version)throw new Error((0,n.format)(n.Messages.Locker.InvalidSpecifier,{specValue:e}));const c=a.getLocalArtifactMtime(o.version),p=a.getLocalArtifactHash(o.version),l=s.FsBlockingUtil.readModifyTime(o.version);if(e&&t&&c&&p&&t.name&&t.version&&c===l&&p)return t.registryType||(t.registryType=i.RegistryType.local,a.updateLockPkg(r.rootDir,r.name,o.version,t)),{name:t.name,packageType:t.packageType,versions:{[o.version]:t},isFromLockFile:!0,registryType:t.registryType}}};