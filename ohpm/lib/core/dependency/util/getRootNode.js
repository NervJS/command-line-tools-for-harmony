"use strict";var e=this&&this.__awaiter||function(e,n,t,r){return new(t||(t=Promise))((function(o,i){function a(e){try{s(r.next(e))}catch(e){i(e)}}function d(e){try{s(r.throw(e))}catch(e){i(e)}}function s(e){var n;e.done?o(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(a,d)}s((r=r.apply(e,n||[])).next())}))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.getRootNode=void 0;const t=require("../struct/dependencyNode"),r=require("../../../util/FsUtil"),o=n(require("path")),i=require("../../../common/Constants"),a=require("../../overrides"),d=require("../../../tools/ohpa/OhpaType"),s=require("./index"),c=require("../../parameter"),g=require("../../override-dependency-map/OverrideDepMapManager"),p=require("../../../config"),u=n(require("../../../log")),l=require("../../../util/isStandardProject"),v=require("../../install-targets/TargetManager");exports.getRootNode=function(n,f){return e(this,void 0,void 0,(function*(){let e;v.TargetManager.getInstance().isTargetMod()&&(e=yield v.TargetManager.getInstance().getModuleOhPkgJson(n)),e&&Object.keys(e).length||(e=yield r.FsUtil.readJSON5(o.default.join(n,i.Constants.MyPackageJson))),e=yield c.ParameterizationManager.getInstance().assignParameterOnPkgJson(e),v.TargetManager.getInstance().isTargetMod()&&v.TargetManager.getInstance().setModuleOhPkgJson(n,e),(0,l.isStandardProject)()&&n===p.config.getProjectRoot()&&(e.name="",e.version=""),e.dependencies=e.dependencies||{},e.devDependencies=e.devDependencies||{},e.dynamicDependencies=e.dynamicDependencies||{},yield(0,a.resolveOverridesDependencies)(e,n),function(e,n){"overrideDependencyMap"in n&&e!==p.config.getProjectRoot()&&u.default.warn("",`Only project-level "overrideDependencyMap" is supported. "overrideDependencyMap" configured at "${o.default.join(e,i.Constants.MyPackageJson)}" will be ignored.`)}(n,e);const y={name:e.name||"",version:e.version||"",actualName:e.name,saveSpec:e.version,fetchSpec:n,pinnedSpec:e.version,pkgStoreDir:n,saveRootDir:n,ohpaType:d.OhpaType.SourceCode,isRoot:!0,isLink:f,dependencies:e.dependencies,devDependencies:e.devDependencies,dynamicDependencies:e.dynamicDependencies,isShared:(0,s.isSharedInProject)(n)};let M;return M=y.saveRootDir===p.config.getProjectRoot()&&v.TargetManager.getInstance().isTargetMod()?v.TargetManager.getInstance().getProjectOhPkgJson():yield g.OverrideDepMapManager.getInstance().getConfig(y.name,y.pinnedSpec,y.fetchSpec,y.pkgStoreDir),u.default.debug("getRootNode",`create root node of module: "${n}" succeed.`),new t.DependencyNode(y,"prod",M)}))};