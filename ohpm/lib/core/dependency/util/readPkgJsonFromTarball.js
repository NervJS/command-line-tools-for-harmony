"use strict";var t=this&&this.__awaiter||function(t,e,r,n){return new(r||(r=Promise))((function(a,o){function i(t){try{c(n.next(t))}catch(t){o(t)}}function s(t){try{c(n.throw(t))}catch(t){o(t)}}function c(t){var e;t.done?a(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(i,s)}c((n=n.apply(t,e||[])).next())}))},e=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.readPkgJsonFromTarball=void 0;const r=require("uuid"),n=e(require("path")),a=require("../../../common/Constants"),o=require("../../../util/FsUtil"),i=e(require("tar")),s=e(require("../../../log")),c=require("../../../util"),l=require("../../../common/message"),u=require("../../../config");exports.readPkgJsonFromTarball=function(e,f){return t(this,void 0,void 0,(function*(){const d=n.default.basename(e),g=(0,r.v4)().replace(/-/g,"").slice(0,12),h=n.default.join(u.config.getProjectRoot(),a.Constants.MyModules,a.Constants.TmpDirName,`.${d}.tmp.${g}`);yield o.FsUtil.createDirIfNotExists(h);const p=(e,r)=>t(this,void 0,void 0,(function*(){try{yield i.default.extract({file:e,cwd:h,strip:1},[`package/${a.Constants.MyPackageJson}`,`package/${a.Constants.PackageJson}`])}catch(t){throw s.default.error("",`Fetch local package: "${e}" failed. ${t}`),Error("readPkgJson failed!")}const t=n.default.join(h,a.Constants.MyPackageJson),c=n.default.join(h,a.Constants.PackageJson);if(r){yield i.default.extract({file:e,cwd:h,strip:0},[r.interfaceHar]);const t=n.default.join(h,r.interfaceHar);if(!(yield o.FsUtil.exists(t)))throw new Error((0,l.format)(l.Messages.Fetcher.LocalArtifact.NotFoundHarFileInLocalHsp,{path:e}));return p(t,null)}if(yield o.FsUtil.exists(t))return o.FsUtil.readJSON5(t,a.Constants.MyPackageJson);if(yield o.FsUtil.exists(c))return o.FsUtil.readJSON5(c,a.Constants.PackageJson);throw new Error((0,l.format)(l.Messages.Fetcher.LocalArtifact.NotFoundPkgJsonInLocalPkg,{path:e}))}));let y;try{return y=yield p(e,f),y}finally{c.FsBlockingUtil.rmDirSync(h)}}))};