"use strict";var e=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(r,o){function s(e){try{d(n.next(e))}catch(e){o(e)}}function c(e){try{d(n.throw(e))}catch(e){o(e)}}function d(e){var t;e.done?r(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(s,c)}d((n=n.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DependencyLockResolver=void 0;const i=require("../../overrides"),n=require("../../../util/needResolveConflict"),r=require("../../../config"),o=require("../../../common/GlobalState"),s=require("../../override-dependency-map/OverrideDepMapManager"),c=require("../../install-targets/ProjectBuildProfile"),d=require("../../../common/Constants"),a=t(require("path")),l=require("../../../util/FsUtil"),p=t(require("semver")),u=/^file:(\s+)?/i;class g{constructor(){this._lockVersion="1.0"}static getInstance(){return this.instance||(this.instance=new g),this.instance}resolve(t){return e(this,void 0,void 0,(function*(){const n=r.config.getProjectRoot(),o={},s={},c=(t,i,r=[])=>e(this,void 0,void 0,(function*(){if(t.unmet)return;if(r.some((e=>e===t.nodeKey)))return;if(t.isRoot){const e=yield this.genModule(t,i),r=l.FsUtil.slash(a.default.relative(n,i.moduleRootDir)||".");o[r]=e}else{const e=`${t.name}@${this.getActualSpec(t,n)}`;if(s[e])return;s[e]=yield this.genPackage(t,i)}const e=Object.keys(t.requirements).map((e=>this.getChildNode(i,e,t)));for(const n of e)r.push(t.nodeKey),yield c(n,i,r),r.pop()}));for(const e of t)yield c(e.root,e);const d=Object.entries(o);d.sort((([e],[t])=>e.localeCompare(t)));const p=Object.fromEntries(d);return{lockVersion:this._lockVersion,settings:this.genSettings(),overrides:this.mapToObject(i.overridesMap),overrideDependencyMap:yield this.genOverrideDependencyMap(),modules:p,packages:s}}))}getActualSpec(e,t){return e.isFromLocal()?"file:"+l.FsUtil.slash(a.default.relative(t,e.pinnedSpec)):e.version}getSpec(e,t,i){if("latest"===i||p.default.validRange(i,{loose:!0,includePrerelease:!0}))return i;const n=u.test(i)?i.replace(u,""):i,r=a.default.resolve(e.moduleRootDir,n);return"file:"+l.FsUtil.slash(a.default.relative(t,r))}genModule(t,i){return e(this,void 0,void 0,(function*(){const e=yield c.projectBuildProfile.getModuleName(l.FsUtil.slash(i.moduleRootDir)),n=s.OverrideDepMapManager.getInstance().needOverride(t.name,t.version,t.nodeData.pkgStoreDir);return{name:e,dependencies:this.stringMapToStringSpecifierVersion(t,i,t.dependencies),devDependencies:this.stringMapToStringSpecifierVersion(t,i,t.devDependencies),dynamicDependencies:this.stringMapToStringSpecifierVersion(t,i,t.dynamicDependencies),maskedByOverrideDependencyMap:n}}))}stringMapToStringSpecifierVersion(e,t,i){const n={};if(!i)return n;for(const[o,s]of Object.entries(i)){const i=this.getChildNode(t,o,e);n[o]={specifier:this.getSpec(t,r.config.getProjectRoot(),s),version:this.getActualSpec(i,r.config.getProjectRoot())}}return n}getChildNode(e,t,i){let n=e.pickNode(t,i.requirements[t].spec,i);return n.packageType===d.Constants.HSPPackageType&&(n=e.pickMaxVersion(t)),n}genSettings(){return{resolveConflict:(0,n.needResolveConflict)(),resolveConflictStrict:r.config.get(r.types.RESOLVE_CONFLICT_STRICT),installAll:!!o.GlobalState.installMode.find((e=>e===o.ExperimentalOption.INSTALL_ALL))}}mapToObject(e){const t={};return e?(e.forEach(((e,i)=>{t[i]=e})),t):t}genOverrideDependencyMap(){return e(this,void 0,void 0,(function*(){const e=s.OverrideDepMapManager.getInstance().overrideDepMap,t={};for(const[i,n]of e)t[i]=yield this.overrideDepMapFileToOverrideDependency(n);return t}))}overrideDepMapFileToOverrideDependency(t){return e(this,void 0,void 0,(function*(){const e=yield t.getOverrideConfig(),i={};return e.dependencies&&(i.dependencies=e.dependencies),e.devDependencies&&(i.devDependencies=e.devDependencies),e.dynamicDependencies&&(i.dynamicDependencies=e.dynamicDependencies),i}))}genPackage(t,i){return e(this,void 0,void 0,(function*(){const e=s.OverrideDepMapManager.getInstance().needOverride(t.name,t.version,t.nodeData.pkgStoreDir),n={integrity:t.integrity,integrityHsp:t.integrityHsp,storePath:l.FsUtil.slash(a.default.relative(r.config.getProjectRoot(),t.resolveSaveRootDir(i.moduleRootDir))),storePathHsp:l.FsUtil.slash(a.default.relative(r.config.getProjectRoot(),t.resolveHspStoreDir(i.moduleRootDir))),dependencies:yield this.getActualDependency(t,i,"prod"),dynamicDependencies:yield this.getActualDependency(t,i,"dynamic"),dev:"dev"===t.depType,dynamic:"dynamic"===t.depType,maskedByOverrideDependencyMap:e};return t.integrity||delete n.integrity,t.integrityHsp||(delete n.integrityHsp,delete n.storePathHsp),n}))}getActualDependency(t,i,n){return e(this,void 0,void 0,(function*(){const e={};return Object.keys(t.requirements).forEach((o=>{if(t.requirements[o].depType===n){const n=this.getChildNode(i,o,t);e[o]=n.isFromLocal()?l.FsUtil.slash(a.default.relative(r.config.getProjectRoot(),n.pinnedSpec)):n.version}})),e}))}}exports.DependencyLockResolver=g;