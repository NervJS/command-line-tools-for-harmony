"use strict";var e=this&&this.__awaiter||function(e,t,n,i){return new(n||(n=Promise))((function(a,r){function s(e){try{o(i.next(e))}catch(e){r(e)}}function p(e){try{o(i.throw(e))}catch(e){r(e)}}function o(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(s,p)}o((i=i.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArtifactDepBuilderImpl=void 0;const n=require("../../util"),i=t(require("path")),a=require("../../../../common/Constants"),r=require("../../../locker"),s=require("../../../../util"),p=require("../../util/getPkgStoreDirName");exports.ArtifactDepBuilderImpl=class{build(t){return e(this,void 0,void 0,(function*(){let e;e="file"===t.ohpaType?yield this.getFileStoreDirName(t):yield(0,n.getPkgStoreDirName)(t.name,t.pinnedSpec,"");const r=e,s=i.default.join(a.Constants.MyModules,t.name);let p,o,c;return t.packageType===a.Constants.HSPPackageType&&t.hspType===a.HspType.BUNDLE_APP&&(p=i.default.join(a.Constants.MyModules,a.Constants.HSPDir,e),c=t.hspType,o=`${t.name}.hsp`.replace(/\//g,"+").replace(/:/g,"+")),{name:t.name,version:t.version,actualName:t.actualName,pinnedSpec:t.pinnedSpec,saveSpec:t.saveSpec,fetchSpec:t.fetchSpec,hspName:o,hspType:c,ohpaType:t.ohpaType,registryType:t.registryType,packageType:t.packageType,isShared:t.isShared,isLink:t.isLink,saveRootDir:r,pkgStoreDir:s,hspStoreDir:p,integrity:t.integrity,shasum:t.shasum,resolved:t.resolved,resolvedHsp:t.resolvedHsp,integrityHsp:t.integrityHsp,isRoot:t.isRoot,devDependencies:t.devDependencies,dependencies:t.dependencies,dynamicDependencies:t.dynamicDependencies}}))}getFileStoreDirName(t){return e(this,void 0,void 0,(function*(){const e=r.PackageLockerManager.getInstance().getLocalArtifactMtime(t.pinnedSpec),i=r.PackageLockerManager.getInstance().getLocalArtifactHash(t.pinnedSpec);if(e===s.FsBlockingUtil.readModifyTime(t.pinnedSpec)&&i)return(0,n.getPkgStoreDirName)(t.name,t.pinnedSpec,i);const o=yield(0,p.fileContentHash)(t.pinnedSpec,a.Constants.compressConfig);return r.PackageLockerManager.getInstance().updateGlobalHashCache(t.pinnedSpec,o),(0,n.getPkgStoreDirName)(t.name,t.pinnedSpec,o)}))}};