"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DependencyNode=void 0;const t=require("../../../tools/posh"),r=require("../../../common/Constants"),s=e(require("path")),n=require("../../../config"),i=require("../util"),a=require("../../install-targets/ProjectBuildProfile");exports.DependencyNode=class{constructor(e,r,s){this._nodeData=e,this._depType=r,this.prefixLabel="",this.suffixLabel="";const n=this.nodeData.name?`${this.nodeData.name}`:".";this._label=`${n} ${t.posh.blackBright(this.nodeData.pinnedSpec||this.nodeData.fetchSpec)}`,this.unmet=e.unmet,this._requirements=(0,i.mergeDependenciesInOrder)(e.name,e.pinnedSpec,{dev:e.isRoot||a.projectBuildProfile.isModuleRoot(e.pkgStoreDir)?s?s.devDependencies||{}:e.devDependencies||{}:{},dynamic:s?s.dynamicDependencies||{}:e.dynamicDependencies||{},prod:s?s.dependencies||{}:e.dependencies||{},noSave:{}}),s&&(this._rawRequirements=(0,i.mergeDependenciesInOrder)(e.name,e.pinnedSpec,{dev:(e.isRoot||a.projectBuildProfile.isModuleRoot(e.pkgStoreDir))&&e.devDependencies||{},dynamic:e.dynamicDependencies||{},prod:e.dependencies||{},noSave:{}}))}resolveHspStoreDir(e){return this.nodeData.isRoot?e:s.default.resolve(e,this.nodeData.hspStoreDir||"")}resolveSaveRootDir(e){return this.nodeData.isRoot?e:s.default.resolve(this.resolveStoreRootDir(e),this.nodeData.saveRootDir)}resolvePkgStoreDir(e){return this.nodeData.isRoot?e:s.default.resolve(this.resolveSaveRootDir(e),this.nodeData.pkgStoreDir)}resolveStoreRootDir(e){return this.nodeData.isShared&&(e=n.config.getProjectRoot()),s.default.join(e,r.Constants.MyModules,r.Constants.PmDir)}get rawRequirements(){return this._requirements}get requirements(){return(0,i.isNeedChildren)(this)?this._requirements:{}}isFromLocal(){return(0,i.isLocalDependency)(this.nodeData.pinnedSpec)}brightLabel(){this._label=t.posh.yellow.bgBlack(this._label)}get nodeData(){return this._nodeData}get name(){return this.nodeData.name}get isNativeSoType(){return!!this.nodeData.isNativeSoType}get dependencies(){const e={};return Object.keys(this._requirements).forEach((t=>{"prod"===this._requirements[t].depType&&(e[t]=this._requirements[t].spec)})),e}get dynamicDependencies(){const e={};return Object.keys(this._requirements).forEach((t=>{"dynamic"===this._requirements[t].depType&&(e[t]=this._requirements[t].spec)})),e}get devDependencies(){const e={};return Object.keys(this._requirements).forEach((t=>{"dev"===this._requirements[t].depType&&(e[t]=this._requirements[t].spec)})),e}get rawDependencies(){const e={},t=this._rawRequirements?this._rawRequirements:this._requirements;return Object.keys(t).forEach((r=>{"prod"===t[r].depType&&(e[r]=t[r].spec)})),e}get rawDynamicDependencies(){const e={},t=this._rawRequirements?this._rawRequirements:this._requirements;return Object.keys(t).forEach((r=>{"dynamic"===t[r].depType&&(e[r]=t[r].spec)})),e}get rawDevDependencies(){const e={},t=this._rawRequirements?this._rawRequirements:this._requirements;return Object.keys(t).forEach((r=>{"dev"===t[r].depType&&(e[r]=t[r].spec)})),e}get depType(){return this._depType}set depType(e){this._depType=e}get isRoot(){return this.nodeData.isRoot}get label(){return this._label}set label(e){this._label=e}get fetchSpec(){return this.nodeData.fetchSpec}get hspType(){return this.nodeData.hspType}get registryType(){return this.nodeData.registryType}get hspName(){return this.nodeData.hspName}get pinnedSpec(){return this.nodeData.pinnedSpec}get version(){return this.nodeData.version}get saveSpec(){return this.nodeData.saveSpec}get packageType(){return this.nodeData.packageType}get integrity(){return this.nodeData.integrity}get shasum(){return this.nodeData.shasum}get integrityHsp(){return this.nodeData.integrityHsp}get resolved(){return this.nodeData.resolved}get resolvedHsp(){return this.nodeData.resolvedHsp}get isLink(){return this.nodeData.isLink}get isShared(){return this.nodeData.isShared}get ohpaType(){return this.nodeData.ohpaType}get nodeKey(){return`${this.nodeData.name}@${this.nodeData.pinnedSpec}`}get innerAddressChain(){var e;return null!==(e=this.nodeData.innerAddressChain)&&void 0!==e?e:[]}};