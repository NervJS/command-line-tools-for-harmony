"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Messages=exports.format=void 0;const e=require("./Constants");exports.format=function(e,a){return a?e.replace(/{{([^}]+)}}/g,((e,t)=>a[t]||e)):e},exports.Messages={Cache:{SubcommandIsEmpty:`Missing subcommand for "${e.Constants.PM} cache - available subcommands: clean, -h."`,SubcommandNotSupport:`Not support subcommand "{{subcommand}}" for "${e.Constants.PM} cache - available subcommands: clean, -h."`},Config:{GlobalRepo:"Global repository path is {{path}}",SubcommandNotSupport:`Not support subcommand "{{subcommand}}" for "${e.Constants.PM} config" - available subcommands: set, get, delete, list, -h.`,SubcommandIsEmpty:`Missing subcommand for "${e.Constants.PM} config" - available subcommands: set, get, delete, list, -h.`,SetCommandParamError:'The input format must be "config set <key> <value>".',GetCommandParamError:'The input format must be "config get <key>".',DeleteCommandParamError:'The input format must be "config delete <key>".',ListCommandParamError:'The input format must be "config list [-j|--json]".',ProtectedKey:'The key "{{key}}" is protected.',KeyNotExist:'The key "{{key}}" doesn\'t exist in the user-level config file.',ConfigurationNotLoaded:"Configuration is not yet loaded.",RepeatLoadConfiguration:`Attempting to load ${e.Constants.PM} config multiple times.`,NotLoadedWhenSaving:"Call config.load() before saving.",NotLoadedWhenSetting:"Call config.load() before setting values."},Check:{InvalidScope:"Invalid package group {{scope}}.",PkgNameNotExist:"Package name not exist.",InvalidPkgName:"Invalid package name {{name}}.",NotSemanticVersion:"The version: {{version}} does not satisfy the semver specification."},Init:{Fail:"Init failed"},List:{Fail:"List failed"},Install:{Success:"Install successfully",Fail:"Install failed",NoMatch:'Couldn\'t find a version matching "{{version}}" for package "{{name}}".',InstallPkgToLocalFailed:"Install package to local folder failed.",InstallLocalHspFailed:"Install local hsp package failed, the .hsp and .har file is missing in {{path}}.",NotFoundHspFileByRegistryTgz:'Cannot find .hsp file from hsp package "{{packageName}}"',InvalidCliInputPkg:"Handle cli input, invalid pkg: {{pkg}}",InconsistentDepNames:"There are some dependency names that are inconsistent with the actual package names."},Uninstall:{Success:"Package {{name}} uninstalled",Fail:"Uninstall failed",NoPkg:"Must provide a package name to remove.",HasVersion:'Uninstall arguments must not contain package version specifier "{{version}}".',NotFoundGlobal:"Unable to find package {{name}} in global repository, expected path is {{path}}."},Update:{Success:"Update successfully",Fail:"Update failed",HasVersion:'Update arguments must not contain package version specifier "{{version}}".',NoPkg:"Must provide a package name to update in global repository.",NotFoundGlobal:"Unable to find package {{name}} in global repository, expected path is {{path}}.",TagFilterNonStandardRegex:'TagFilter "{{tagFilter}}" is not a standard regex. err: {{error}}'},Version:{ErrorUsage:"Error usage.",InvalidVersionArg:'Invalid version: "{{version}}".',InvalidOriginVersion:'Original version: "{{version}}" is invalid.',NotExist:"Original version not exist.",NoChange:"Version not changed.",ForbiddenOpt:'Forbidden to execute "version" command under project root directory.'},Common:{PkgNotFound:`The ${e.Constants.MyPackageJson} file does not exist in the directory.`,FileNotFound:'Missing file "{{filename}}" in "{{filedir}}".',FileReadError:'Found exception while read "{{filename}}" in "{{filedir}}", detail: "{{detail}}".',FileEmpty:'File: "{{filePath}}" content is empty.',ErrorUsage:"Error usage.",ParseDependencyFailed:'ParsePkg fail, package "{{pkg}}", detail: "{{msg}}"',DepNodeNotFound:'The dependency "{{name}}@{{fetchSpec}}" not found in the dependency final tree',RoughDepNodeNotFound:'The dependency "{{name}}@{{fetchSpec}}" not found in the dependency rough tree',DepNodeMaxVersionNotFound:'The max version of dependency "{{name}}" not found in the dependency final tree'},Publish:{DepStatementsMissing:"Found dependency statement missing in oh-package.json5",KeyPathIsEmpty:`The "key_path" is empty - configure "key_path" in the ${e.Constants.PmRc} file.`,PrivateKeyFileNotExist:`The file in "{{keyPath}}" does not exist - check "key_path" in the ${e.Constants.PmRc} file.`,KeyPathIsDirError:"The key_path is incorrect, we expect the actual private key file path, while the provided one is a directory.",PublishIdIsEmpty:`The "publish_id" is empty - configure "publish_id" in ${e.Constants.PmRc} file.`,PrivateKeyContentIsEmpty:`The content of private key in "{{keyPath}}" is empty - check "key_path" in the ${e.Constants.PmRc} file.`,NotSupportPrivateKey:"Not supported private key.",SignatureUnknownError:"An unknown error occurred while getting the signature.",HspFileIsEmpty:"The '.hsp' file \"{{path}}\" cannot be empty.",InvalidTgzFile:"Invalid tgz file \"{{path}}\", it's must both contain '.har' file and '.hsp' file!",BuildTgzMetadataFailed:'Package "{{name}}@{{version}}" build tgz metadata failed',PkgIsLocked:'Package "{{pkg}}" is locked, maximum retry times "{{maxRetryTimes}}" exceeded'},UnPublish:{DeleteAllVersionPkgNotForce:"Refusing to delete entire project - run with --force to do this."},Script:{Success:"Run script succeeded!",Fail:"Run script failed!",HookFail:'Run "{{hookName}}" hook script failed!',InvalidCommandError:"Invalid command, the command containing '('、'['、'{' does not exist!",InvalidKey:"The initial letter of the script alias must be lowercase!",InvalidKeyLen:"The script alias length must be in [1, 128]!",InvalidParamLen:"The total length of params specified in script alia must be in [1, 2048]!",InvalidKeyRegex:"The script alias can contain only uppercase letters, lowercase letters, digits, underscores (_), and hyphens (-)!",RepeatKeyError:`The script alias is repeated in ${e.Constants.MyPackageJson}.scripts!`,CommandError:`Cannot execute ${e.Constants.PM} commands other than \`ohpm run\` in scripts.`,ParsePkgError:`Failed to parse ${e.Constants.MyPackageJson}!`,DependencyPrefixError:"The path specified by prefix must be a module in the current project, \nthe script alias in the dependent module cannot be invoked in this way!",PrefixInvalidError:"The --prefix option cannot be configured under the scripts node in oh-package.json5!",MultiCommandError:"When compound command(commands concatenated using && or ||) is used, 'ohpm run' command does not support \nusing '--' to supply additional parameters!",PkgUnExistError:`The ${e.Constants.MyPackageJson} does not exist! Possible causes: \n      1. The current directory and all its parent directories are not configured with oh-package.json5. \n      2. --prefix specifies the directory where oh-package.json5 does not exist. \n      3. --prefix specifies the path in oh_modules.`,ScriptUnExistError:`The script alias does not exist in ${e.Constants.MyPackageJson}!`,ScriptEmptyError:"The script content is empty!",ScriptInvalidError:"The script content is invalid, 'command' or 'alias' is empty!",ScriptContentError:"If the '--' identifier is referenced in the alias, only one 'ohpm run' command can be executed!",DirectedCycleError:"The script contains circular invocation, please check the configuration!",InvalidHeaderParamError:"Invalid script param, the first param must start with '-' or '--'",InvalidParamError:"Invalid script param, the valid format is (-key/--key value)、(-key/--key=value)、(-key/--key=a=b)!",InvalidParamConfigError:'Script parameters must begin with "--" to indicate that you need to add or override parameters!'},Limit:{NumberInvalid:'Expected "{{paramName}}" to be a integer number of [{{min}}, {{max}}]',FnInvalid:'Expected "{{paramName}}" is empty or undefined!',TaskArrInvalid:'Expected "{{paramName}}" to be a array of async function!'},Symlink:{SymlinkWarn:"Symlink wanted name was occupied by directory or file, Old entity removed!",SymlinkPathError:"SymlinkDir path is the same as the source path ({{src}}).",MkdirError:'Error while trying to symlink "{{src}}" to "{{dest}}". The error happened while trying to create the parent directory for the symlink target, details: {{mkdirError}}.',EEXIST:'The "{{dest}}" is exist while symlink.',UnNTFS:"The OHPM failed to create a symbolic link. Please place your project on a disk of type NTFS and try again.",UnknownError:"Found unknown error while symlink, code: {{code}}, details: {{detail}}."},Rename:{RenameError:"Failed to safe-rename ({{src}}) to {{dest}}",UnknownError:"Found unknown error while rename, code: {{code}}, details: {{detail}}.",SourceUnExistError:"The source path ({{src}}) not exist! detail: {{detail}}"},Overrides:{ReferenceSpecNotFound:'The referenced spec of "{{replaceSpec}}" is not found in "{{packageJsonPath}}".',SpecNotMatch:'The replace spec of "{{depName}}" is not match to the existing spec in "{{packageJsonPath}}". Existing spec is "{{spec}}", but the replace spec is "{{replaceSpec}}".',InvalidSpec:'Invalid replace spec "{{replaceSpec}}" for "{{depName}}" in {{packageJsonPath}}.',ValidSpecFailed:"Overrides valid replace spec failed.",ValidDependencyMapSpecFailed:"OverrideDependencyMap valid replace spec failed."},Ohpa:{PkgInvalidError:"Invalid param of pkg, the pkg type is string.",NameEmptyError:"Name cannot be empty.",NameTooLongError:"Name can no longer contain more than 214 characters.",NameWithBlankError:"Name cannot contain leading or trailing spaces.",NameUriError:"Name can only contain URL-friendly characters",NameInvalidStartError:"Name cannot start with '.' or '_'",NameWithSpecialError:"Name can no longer contain special characters in (~'!()*)",NameInBlacklistError:'"{{name}}" is a blacklisted name.',NameInCoreModuleError:'"{{name}}" is a core module name.',SpecUriError:'Invalid tag name "{{spec}}" of package "{{raw}}": Tags may not have any characters that encodeURIComponent encodes.',SpecInvalidError:'Invalid spec of "{{spec}}", detailError: "{{error}}"'},Fetcher:{OhModules:{DependencyNotFound:`Package "{{depName}}" not found in ${e.Constants.MyModules}`},Registry:{FetchPkgInfoFailed:'FetchPackageInfo: "{{pkgName}}" failed',CheckRegistryFailed:`${e.Constants.PM} tool does not support this registry {{registry}}.`,FetchPkgFailed:"GET {{url}} failed, response.status = {{status}}, {{statusText}}"},LocalArtifact:{FetchMetadataFailed:'Fetch dependency "{{depName}}" metadata from "{{tarballPath}}" failed',FetchLocalPackageFailed:"Fetch local file package error, {{tarballPath}} does not exist.",NotFoundHarFileInLocalHsp:"Fetch local hsp package error, the .har file is missing in {{path}}.",NotFoundPkgJsonInLocalPkg:`Fetch local package error, the ${e.Constants.MyPackageJson} file is missing in {{path}}.`},SourceCode:{FetchSourceCodeFailed:"Fetch local folder package error, {{path}} does not exist."},InvalidPkgKey:'Invalid package lockkey: "{{key}}"',InconsistentDependencyKey:'local dependency "{{depName}}" found in "{{pkgJsonPath}}" does not match the actual name "{{packageName}}" of its oh-package.json5',UnknownOhpaType:'Unknown ohpa type: "{{ohpaType}}" of package: "{{pkg}}"'},DepBuilder:{BuildFailure:"Dependency tree building failed.",UnknownBuilderType:'Unknown builder type: "{{builderType}}"',UnknownOhpaType:'Unknown ohpa type: "{{ohpaType}}"',SameAsThePkgName:"The dependency name cannot be the same as the package name, {{name}}@{{version}} -> {{depName}}@{{depVersion}}.",InvalidDependency:"Invalid dependency",InvalidDepVersion:'The version "{{version}}" of dependency "{{depKey}}" is invalid',InvalidInterfaceHar:"InterfaceHar: {{pkg}} in source form is not allowed inside a dependency or module",CrossDriverError:'The source code dependency "{{pkg}}" is not in the same file system as the current project'},VersionConflick:{StrategyNotSet:'Strategy::Version conflict strategy is not set in "{{className}}.{{methodName}}"',MultiFixedVersionError:'Strategy::Dependency "{{depName}}" has multiple fixed versions: "{{fixedVersions}}", only one fixed version is allowed',FixedVersionRangeMismatch:'Strategy::Dependency "{{depName}}" has a fixed version "{{fixedVersion}}" that does not satisfy the range: "{{range}}"',RangeVersionsMismatch:'Strategy::Dependency "{{depName}}" has conflicting range versions: "{{ranges}}" with no intersection of versions',LocalDependencyConflictError:'Strategy::Local dependency conflict detected for "{{depName}}", target spec: "{{targetPinnedSpec}}", resolved spec: "{{resolvedPinnedSpec}}"',NotFoundMaxSatisfyingVersion:'When resolving the version conflicts of the inner package "{{name}}", the maximum satisfying version was not found.'},DepInstall:{TarBallSizeExceed:`The size of the compressed package cannot exceed ${e.Constants.MaxPackSizeMB}MB`},Serializer:{InvalidFormat:"Invalid serialization format {{format}}."},Parameterization:{KeyEmptyError:"The key value in parameterFile cannot be empty.",VersionEmptyError:"The version value in parameterFile cannot be empty.",InvalidFilePathError:'The path specified through the command line option "--parameterFile" or the "parameterFile" node in "{{filename}}" must be a file path.',FilePathEmptyError:'The path of "{{configName}}" is empty in "{{ohPkgPath}}"!',FileContentEmptyError:'The content of "{{filepath}}" is empty!',InvalidKeyError:'The key: "{{key}}" in parameterFile is invalid, only support at(@), slashe(/), letters, digits, dots(.), hyphens(-), and underscores(_). For details, see the package name verification rules.',InvalidVersionError:'The version value: "{{version}}" in invalid in "{{parameterFile}}"',ForbiddenInstallError:'The "ohpm install <pkg>" command cannot be executed when the "{{configName}}" configuration exists in the project-level {{ohPkgName}} file.',ForbiddenModifyError:'Unable to modify the dependency "{{key}}" whose specification is parameterized.',ForbiddenUpdateError:'The "update" command cannot be executed when the "{{configName}}" configuration exists in the project-level {{ohPkgName}} file.',ForbiddenUnInstallError:'The "uninstall" command cannot be executed when the "{{configName}}" configuration exists in the project-level {{ohPkgName}} file.',NotFoundProjectRootError:`NotFound ${e.Constants.BuildProfile} or ${e.Constants.MyPackageJson} file in current path: ${process.cwd()}`,FileEmptyError:`"${e.Constants.MyPackageJson}" file is empty in current path: "${process.cwd()}"`,ParameterFileNotConfigError:'Missing or invalid config of "{{configName}}" in the project-level {{ohPkgName}} file.',ParameterUnExistError:'Failed to find the leaf node matching the parameter "{{parameterPath}}" in the parameter configuration file "{{filePath}}"',InvalidParameterConfigError:'Invalid config of "{{parameterPath}}" in "{{configName}}", only leaf node configurations can be referenced.',VersionTypeError:'Invalid type of parameter value, only support "string" or "object".',ConfiguredProjectLevelParameterFileNotExist:'The parameterFile file "{{parameterPath}}" configured in the project-level does not exist!',ParameterFileNotExist:'The parameterFile file "{{parameterFilePath}}" does not exist!',CliInputParameterFileNotExist:"The parameterFile file entered in the command line does not exist!",ConfiguredParameterFileNotExistError:'File path: "{{filePath}}" configed in "{{parameterPath}} does not exist, the parameterKey is "{{parameterKey}}"',ReadOhPkgJsonError:`Read the ${e.Constants.MyPackageJson} content failed, key is "{{parameterKey}}", value is "{{parameterValue}}"`,InconsistentDepNames:'The local dependency "{{depName}}" in "{{depPath}}" does not match the actual name "{{actualPkgName}}"',UnSupportLinkModeError:"The local dependency cannot be parameterized in no-link mode."},DistTags:{TagInvalidError:'Invalid tag "{{tag}}": The tag must start with a letter or a number and can only consist of letters, numbers, periods ("."), hyphens ("-") and underscores ("_"), with a maximum length of 60 characters, and cannot be "latest".',TagPkgInvalidError:'Invalid tag "{{tag}}" of package "{{pkg}}": The tag must start with a letter or a number and can only consist of letters, numbers, periods ("."), hyphens ("-") and underscores ("_"), with a maximum length of 60 characters, and cannot be "latest".',ListCommandParamError:'The input format must be "dist-tags list <pkg>".',ReservedTagError:'The tag can\'t use "latest", "latest" is a reserved keyword.',SubCommandParamError:'The input format must be "dist-tags {{subCommand}} <pkg> <tag>".',PublishRegistryEmptyError:`The publish_registry url is empty - use "${e.Constants.PM} config set publish_registry your_publish_registry" command to set the url.`,VersionEmptyError:'The version "<@group/><pkg><@version>" cannot be empty.',SubcommandIsEmpty:`Missing subcommand for "${e.Constants.PM} dist-tags" - available subcommands: add, remove, update, list, -h.`,SubcommandNotSupport:`Not support subcommand "{{subcommand}}" for "${e.Constants.PM} dist-tags" - available subcommands: add, remove, update, list, -h.`},OverrideDepMap:{KeyEmptyError:'The key configed in "{{configNode}}" cannot be empty.',InvalidSpecError:'Invalid specification: "{{spec}}" in "{{configNode}}", The specification follows Semver specification or uses standard tags, including "latest", but excludes version range support.',FilePathEmptyError:'The filePath configed in "{{configNode}}" is empty, key: "{{configName}}".',FileUnExistError:'The filePath: "{{filePath}}" configed in "{{configNode}}" does not exist, key: "{{configName}}".',OverrideDepMapValueTypeError:'The value type of "overrideDependencyMap" must be a object, for example: {"liba": "./xxx.json5"}.',InvalidFilePathError:'The filePath: "{{filePath}}" configed in "{{configNode}}" must be a file path, key: "{{configName}}".',InvalidDirPathError:'The filePath: "{{filePath}}" configed in "{{configNode}}" must be a directory path, key: "{{configName}}".',InvalidVersionError:'The version configed in "{{filePath}}" is empty, key: "{{key}}".'},File:{NonStandardJson5File:"Check project root directory error, {{filePath}} is not the standard JSON5 format file.",NotFoundOhPkgJson5:"oh-package.json5 not found in {{pkgStoreDir}}",ReadOhPkgJson5Failed:`read ${e.Constants.MyPackageJson} content failed!`,FileNotExist:"File: {{filePath}} does not exist.",SymLinkDirFailed:"Link {{linkDirPath}} to {{realDirPath}} failed. error: {{msg}}"},Clean:{CleanModuleFailed:"Clean module {{modulePath}} failed,  files may be occupied, detail: {{msg}}"},Path:{NotFoundPathOrAlg:"pathHash fail! path or algorithm is empty.",PathHashFailed:"pathHash fail! msg: {{msg}}"},Locker:{InvalidSpecKey:"Invalid specifier key: {{specKey}}",InvalidSpecifier:"Invalid specifier value: {{specValue}}",PkgNotFoundInLockfile:"{{pkg}} not found in lockfile"},Log:{ReplacePlaceHolderFailed:"Replace log place holder failed."},Validator:{ConfigEmptyError:'Field "{{attrName}}" is empty in validator config!',RuleTypeError:'Check rule of "{{attrName}}" - typeof "configs" is not array.',InvalidRuleError:'Invalid "{{ruleName}}".',AttributeTypeError:'Attribute "{{attrName}}" in oh-package.json5 is not an object.',FieldLengthError:'The "{{fieldName}}" field in the oh-package.json5 file cannot contain more than "{{length}}" characters.',FieldEmptyError:'The "{{fieldName}}" field in the oh-package.json5 file is empty.',TypesFieldEmptyError:'The "types" field in the oh-package.json5 file cannot be empty when the "artifactType" is set to "obfuscation".',InvalidEmail:"The format of the email in the oh-package.json5 is invalid. You should follow the xxx@xxx.xxx format",KeywordsTypeError:"The keywords field in the oh-package.json5 file must be an array.",KeywordsLengthError:'The keywords field in oh-package.json5 file cannot contain more than "{{length}}" words.',KeywordsItemLengthError:'Each keyword in keywords field of the oh-package.json5 file cannot be empty or contain more than "{{length}}" characters.',InvalidVersion:'The version field: "{{version}}" in the oh-package.json5 file does not satisfy the semver specification.',InvalidDependency:'An invalid dependency: "{{depKey}}" is detected in the package, Local dependency cannot be configured in the package during release.',SpecLengthError:'The version length of "{{depKey}}" must range [1, 64].',InvalidTag:'An invalid dependency: "{{depKey}}" is detected in the package, Tag can only contain numbers, letters and ._ symbols, and start with letters, and can not be "latest".',PublishRegistryError:`The publish_registry url is empty - use "${e.Constants.PM} config set publish_registry your_publish_registry" command to set the url.`,PkgEmptyError:"You have to specify a correct har_file or tgz_file path.",FileUnExistError:'The "main" or "types" field declare file "{{file}}" does not exist in package.',ArtifactTypeError:'The value of artifactType field in the oh-package.json5 must be "{{data}}".',NameIsCoreModuleError:'The name: "{{value}}" is a core module name.',NameStartWithPeriodError:'The field "name" cannot start with a period',NameStartWithUnderscoreError:"The field name cannot start with an underscore",NameContainsSpacesError:"The field name cannot contain leading or trailing spaces",NameIsBlackListError:'The name: "{{value}}" is a blacklisted name',NameLengthError:'The field "name" contain more than "{{length}}" characters',NameCapitalError:'The field "name" cannot contain capital letters',NameWithSpecialCharsError:'The field "name" cannot contain special characters ("~\'!()*")',NameInvalidError:'The field "name" contains invalid characters',PackageTypeEmptyError:'The "packageType" field is mandatory and cannot be empty!',PackageTypeInvalidError:'The "packageType" in oh-package.json5 file is invalid! reference value: "InterfaceHar"',UnknownError:"Unknown Error",ValidAuthorNameLengthFailed:`The length of "author.name" in ${e.Constants.MyPackageJson} must be less than or equal to 128`,ValidAuthorEmailLengthFailed:`The length of "author.email" in ${e.Constants.MyPackageJson} must range [0, 64]`,ValidAuthorUrlLengthFailed:`The length of "author.url" in ${e.Constants.MyPackageJson} must range [0, 256]`,InValidAuthorContentError:`The content of "{{author}}" in ${e.Constants.MyPackageJson} is invalid`,ContributorItemError:'Each {{itemName}} in "{{fieldName}}" field of the oh-package.json5 file must comply with the "author" field specifications, an invalid item found in "{{fieldName}}", reason: {{errMsg}}'},Http:{ProxyNotProvided:"Proxy not provided",ActionRequestUrlFailed:'The "{{action}}" request to url "{{url}}" has failed'},Ping:{PingRegistriesFailed:"Ping failed for registries: {{registries}}",RegistryIsEmpty:'The registry is not set, please edit .ohpmrc file or use "ohpm config set registry https://ohpm.openharmony.cn/ohpm/" command to set the registry.'},Target:{TargetPathUnExistError:'Invalid "--target_path" value, the filePath: "{{filePath}}" does not exist.',NotDirPathError:'Invalid "--target_path" value, the filePath: "{{filePath}}" must be a directory path.',NotFilePathError:'The filePath: "{{filePath}}" must be a file path.',FileUnExistError:'The file: "{{filePath}}" does not exist.',OhPkgPathEmptyError:'The path of "{{moduleName}}" in "{{filePath}}" can not be empty.',ModulePathUnExistError:'The module: "{{moduleName}}" configed in "{{filePath}}" does not exist.',InvalidTargetError:'Found invalid target: "{{targetName}}" in "{{version}}", it\'s value should be: "{{defaultTarget}}"'},TraceWriter:{GetOhpmVersionFail:"failed to obtain the ohpm version when obtaining the trace log directory",OhpmVersionInvalid:"the ohpm version is invalid when obtaining the trace log directory",TraceLogPathUnExist:"the trace log file path is not exist! trace path: {{logPath}}",TraceEmptyError:"conversion failed, The trace bean is null",TraceConvertError:"failed to convert the trace bean to the event bean, the event bean is null",TraceEncryptError:"encrypting trace data failed, the ciphertext is null",TraceWriteError:"writing the trace data to the file failed, the content is null",FileUnExistError:"{{fileDesc}} file is not exist!",OutOfByteBoardError:"value must be less than or equal to 255"},Encrypt:{InvalidParameter:"{{option}} parameters is null!"},DependencyTreeStore:{NotInitialized:"DependencyTreeStore is not initialized"}};