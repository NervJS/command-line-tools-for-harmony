"use strict";var t=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.initRc=void 0;const e=t(require("path")),i=t(require("os")),n=require("../common/Constants"),r=require("../util"),o=t(require("../log")),s=require("./DefaultConfig"),l=e.default.join(i.default.homedir(),n.Constants.PmDir),a=e.default.join(l,n.Constants.PmRc),u=e.default.resolve(__dirname,"..",".."),c=e.default.join(u,n.Constants.PmRcDir,n.Constants.PmRc);exports.initRc=function(){try{if(r.FsBlockingUtil.existsSync(a))return;if(o.default.setup(s.defaultConfig.log_level),!r.FsBlockingUtil.existsSync(c))return void o.default.error("initRc",`not fund ${n.Constants.PmRc} file template.`);const t=r.FsBlockingUtil.readFileSync(c,"utf-8");t?(r.FsBlockingUtil.createDirIfNotExists(l),r.FsBlockingUtil.writeFileSync(a,t)):o.default.warn("initRc",`read ${n.Constants.PmRc} file content failed.`)}catch(t){o.default.warn("initRc",`init user ${n.Constants.PmRc} file failed, err: ${t}.`)}};