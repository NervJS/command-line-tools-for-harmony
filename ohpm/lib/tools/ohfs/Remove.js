"use strict";var e=this&&this.__awaiter||function(e,t,i,r){return new(i||(i=Promise))((function(n,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function u(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(o,u)}s((r=r.apply(e,t||[])).next())}))},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Remove=void 0;const i=t(require("../../log")),r=t(require("graceful-fs"));exports.Remove=class{async(t){return e(this,void 0,void 0,(function*(){if(t)try{yield r.default.promises.rm(t,{force:!0,maxRetries:10,recursive:!0})}catch(e){if("ENOENT"===e.code)return;i.default.debug("",`remove fail: ${e}, start try delete '${t}' again.`),r.default.statSync(t).isDirectory()?yield r.default.promises.rm(t,{force:!0,maxRetries:10,recursive:!0}):yield this.delFile(t)}else i.default.debug("","the target path cannot be empty!")}))}delFile(t){return e(this,void 0,void 0,(function*(){try{yield r.default.promises.unlink(t)}catch(e){if("ENOENT"===e.code)return void i.default.debug("EDELETE",`${t} may be unexist! detail: ${e.message}`);throw i.default.warn("EDELETE",`delete file ${t} failed. ${e}`),e}}))}};