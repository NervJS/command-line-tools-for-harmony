"use strict";var e=this&&this.__awaiter||function(e,r,i,t){return new(i||(i=Promise))((function(s,n){function o(e){try{a(t.next(e))}catch(e){n(e)}}function l(e){try{a(t.throw(e))}catch(e){n(e)}}function a(e){var r;e.done?s(e.value):(r=e.value,r instanceof i?r:new i((function(e){e(r)}))).then(o,l)}a((t=t.apply(e,r||[])).next())}))},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Symlink=void 0;const i=require("./PathResolve"),t=require("../../common/message"),s=require("../../util/OsUtil"),n=r(require("fs")),o=r(require("path")),l=require("../ohfs"),a=require("../../util/FsUtil");exports.Symlink=new class{constructor(){this.symlinkType=s.OsUtil.isWindows?"junction":"dir",this.opts={overwrite:!0}}isSymbolicLink(e){if(!n.default.existsSync(e))return!1;try{return!!n.default.readlinkSync(e)}catch(e){return!1}}symlink(r,n,l){return e(this,void 0,void 0,(function*(){if(r=i.pathResolve.pathResolve(r),n=i.pathResolve.pathResolve(n),l&&(this.opts=l),r===n)throw new Error((0,t.format)(t.Messages.Symlink.SymlinkPathError,{src:r}));return s.OsUtil.isWindows?r=`${r}\\`:(s.OsUtil.isMac||s.OsUtil.isLinux)&&(r=o.default.relative(o.default.dirname(n),r)),this.forceSymlink(r,n)}))}forceSymlink(r,i){return e(this,void 0,void 0,(function*(){try{return yield n.default.promises.symlink(r,i,this.symlinkType),{reused:!1}}catch(e){return this.doSymlinkError(r,i,e)}}))}doSymlinkError(r,i,n){return e(this,void 0,void 0,(function*(){switch(n.code){case"ENOENT":try{return yield a.FsUtil.mkdirIfNotExists(o.default.dirname(i)),yield this.forceSymlink(r,i),{reused:!1}}catch(e){throw new Error((0,t.format)(t.Messages.Symlink.MkdirError,{src:r,dest:i,mkdirError:e}))}case"EEXIST":case"EISDIR":if(this.opts&&this.opts.overwrite)return this.doSymlinkExist(r,i);throw new Error((0,t.format)(t.Messages.Symlink.EEXIST,{dest:i}));default:if(s.OsUtil.isWindows&&(!n.code||"unknown"===n.code.toLowerCase()))throw new Error(t.Messages.Symlink.UnNTFS);throw new Error((0,t.format)(t.Messages.Symlink.UnknownError,{code:n.code,detail:n.message}))}}))}doSymlinkExist(r,i){return e(this,void 0,void 0,(function*(){let e;try{return e=yield n.default.promises.readlink(i),r===e?{reused:!0}:(yield n.default.promises.unlink(i),yield this.forceSymlink(r,i))}catch(e){return yield l.remove.async(i),Object.assign(Object.assign({},yield this.forceSymlink(r,i)),{warn:t.Messages.Symlink.SymlinkWarn})}}))}};